<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>ndb</groupId>
        <artifactId>ndb-root</artifactId>
        <version>4.6.0</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>

    <artifactId>trino-vast</artifactId>
    <version>4.6.0</version>
    <description>Trino - VAST Connector</description>
    <packaging>trino-plugin</packaging>

    <properties>
        <air.main.basedir>${project.parent.basedir}</air.main.basedir>
        <air.release.preparation-goals>clean verify -DskipTests</air.release.preparation-goals>
        <dep.accumulo.version>1.7.4</dep.accumulo.version>
        <dep.accumulo-hadoop.version>2.7.7-1</dep.accumulo-hadoop.version>
        <dep.antlr.version>4.9.3</dep.antlr.version>
        <dep.packaging.version>${dep.airlift.version}</dep.packaging.version>
        <dep.okhttp.version>3.14.9</dep.okhttp.version>
        <dep.jsonwebtoken.version>0.11.2</dep.jsonwebtoken.version>
        <dep.oracle.version>19.3.0.0</dep.oracle.version>
        <dep.drift.version>1.14</dep.drift.version>
        <dep.scribejava.version>6.9.0</dep.scribejava.version>
        <dep.tempto.version>187</dep.tempto.version>
        <dep.gcs.version>2.0.0</dep.gcs.version>
        <dep.duct-tape.version>1.0.8</dep.duct-tape.version>
        <dep.docker-java.version>3.2.12</dep.docker-java.version>
        <dep.coral.version>2.0.55</dep.coral.version>
        <dep.confluent.version>5.5.2</dep.confluent.version>
        <project.build.targetJdk>11</project.build.targetJdk>
        <air.java.version>1.8.0-202</air.java.version>
        <dep.trino.version>375</dep.trino.version>
        <dep.trino.airlift.version>214</dep.trino.airlift.version>
        <maven.compiler.source>16</maven.compiler.source>
        <maven.compiler.target>16</maven.compiler.target>

        <dep.docker.images.version>53</dep.docker.images.version>

        <!--
          America/Bahia_Banderas has:
           - offset change since 1970 (offset Jan 1970: -08:00, offset Jan 2018: -06:00)
           - DST (e.g. at 2017-04-02 02:00:00 clocks turned forward 1 hour; 2017-10-29 02:00:00 clocks turned backward 1 hour)
           - has forward offset change on first day of epoch (1970-01-01 00:00:00 clocks turned forward 1 hour)
           - had forward change at midnight (1970-01-01 00:00:00 clocks turned forward 1 hour)
          -->
        <air.test.timezone>America/Bahia_Banderas</air.test.timezone>
        <air.test.parallel>classes</air.test.parallel>
        <air.test.thread-count>2</air.test.thread-count>
        <!-- Be conservative about memory allotment, because tests start background process (e.g. docker containers) -->
        <air.test.jvmsize>3g</air.test.jvmsize>

        <air.javadoc.lint>-missing</air.javadoc.lint>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.trino</groupId>
            <artifactId>trino-collect</artifactId>
            <version>${dep.trino.version}</version>
        </dependency>
        <dependency>
            <groupId>io.trino</groupId>
            <artifactId>trino-main</artifactId>
            <version>${dep.trino.version}</version>
        </dependency>
        <dependency>
            <groupId>io.trino</groupId>
            <artifactId>trino-plugin-toolkit</artifactId>
            <version>${dep.trino.version}</version>
        </dependency>
        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>bootstrap</artifactId>
            <version>${dep.trino.airlift.version}</version>
        </dependency>
        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>configuration</artifactId>
            <version>${dep.trino.airlift.version}</version>
        </dependency>
        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>http-client</artifactId>
            <version>${dep.trino.airlift.version}</version>
        </dependency>
        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>json</artifactId>
            <version>${dep.trino.airlift.version}</version>
        </dependency>
        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>log</artifactId>
            <version>${dep.trino.airlift.version}</version>
        </dependency>
        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>node</artifactId>
            <version>${dep.trino.airlift.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${dep.jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${dep.jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jdk8</artifactId>
            <version>${dep.jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-parameter-names</artifactId>
            <version>${dep.jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.flatbuffers</groupId>
            <artifactId>flatbuffers-java</artifactId>
            <version>2.0.3</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.15</version>
        </dependency>
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
        </dependency>
        <dependency>
            <groupId>ndb</groupId>
            <artifactId>ndb-common</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.arrow</groupId>
            <artifactId>arrow-memory-core</artifactId>
            <version>7.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.arrow</groupId>
            <artifactId>arrow-memory-netty</artifactId>
            <version>7.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.arrow</groupId>
            <artifactId>arrow-vector</artifactId>
            <version>7.0.0</version>
        </dependency>
        <dependency>
            <groupId>io.trino</groupId>
            <artifactId>trino-spi</artifactId>
            <version>${dep.trino.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>slice</artifactId>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.openjdk.jol</groupId>
                    <artifactId>jol-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${dep.jackson.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.openjdk.jol</groupId>
            <artifactId>jol-core</artifactId>
            <version>0.2</version>
            <scope>provided</scope>
        </dependency>
        <!-- for testing -->
        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>testing</artifactId>
            <version>${dep.trino.airlift.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.10.19</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${dep.testng.version}</version>
            <scope>test</scope>
        </dependency>
<!--        <dependency>-->
<!--            <groupId>com.amazonaws</groupId>-->
<!--            <artifactId>aws-java-sdk-core</artifactId>-->
<!--            <version>1.12.172</version>-->
<!--            <scope>runtime</scope>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>com.amazonaws</groupId>-->
<!--            <artifactId>aws-java-sdk-s3</artifactId>-->
<!--            <version>1.12.172</version>-->
<!--            <scope>runtime</scope>-->
<!--        </dependency>-->
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <configuration>
                    <sourceDirectories>
                        <sourceDirectory>src/main/java/com/vastdata/trino/plugin/vast</sourceDirectory>
                    </sourceDirectories>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration combine.self="override">
                    <source>11</source>
                    <target>11</target>
                    <fork>false</fork>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <includes>
                        <!-- Tests classes should start with "Test", but we do also want to include tests incorrectly named, with "Test" at the end -->
                        <include>**/Test*.java</include>
                        <include>**/*Test.java</include>
                        <include>**/Benchmark*.java</include>
                    </includes>
                    <excludes>
                        <exclude>**/*jmhTest*.java</exclude>
                        <exclude>**/*jmhType*.java</exclude>
                    </excludes>
                    <argLine>${argLine}
                        -Dfile.encoding=UTF-8
                        -Xmx3g
                        -Xms3g
                        -XX:+ExitOnOutOfMemoryError
                        -XX:+HeapDumpOnOutOfMemoryError
                        -XX:-OmitStackTraceInFastThrow
                        --illegal-access=warn
                    </argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <configuration>
                    <usedDependencies>
                        <dependency>org.apache.arrow:arrow-memory-netty</dependency>
                    </usedDependencies>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.basepom.maven</groupId>
                <artifactId>duplicate-finder-maven-plugin</artifactId>
                <configuration>
                    <ignoredResourcePatterns>
                        <!-- [org.apache.arrow:arrow-format, org.apache.arrow:arrow-memory-core, org.apache.arrow:arrow-vector] -->
                        <ignoredResourcePattern>git.properties</ignoredResourcePattern>
                        <!-- [org.eclipse.jetty.http2:http2-client, org.eclipse.jetty.http2:http2-common, org.eclipse.jetty.http2:http2-hpack, org.eclipse.jetty.http2:http2-http-client-transport, org.eclipse.jetty:jetty-alpn-client, org.eclipse.jetty:jetty-alpn-java-client, org.eclipse.jetty:jetty-client, org.eclipse.jetty:jetty-http, org.eclipse.jetty:jetty-io, org.eclipse.jetty:jetty-util] -->
                        <ignoredResourcePattern>about.html</ignoredResourcePattern>
                    </ignoredResourcePatterns>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <!-- Allow to run goals with an empty local Maven repository -->
            <id>disable-check-spi-dependencies</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.trino</groupId>
                        <artifactId>trino-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default-check-spi-dependencies</id>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
